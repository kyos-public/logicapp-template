{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "LogicAppName": {
            "value": "wf-provision-entra",
            "type": "string"
        },
        "LogicAppLocation": {
            "defaultValue": "[resourceGroup().location]",
            "type": "string",
            "metadata": {
                "description": "Location for all resources"
            }
        },
        "KeyVaultName": {
            "value": "your-keyvault-name",
            "type": "string",
            "metadata": {
                "description": "Name of the Azure Key Vault"
            }
        },
        "SnowUri": {
            "value": "https://snow.com",
            "type": "string",
            "metadata": {
                "description": "URL of the Service Now instance"
            }
        },
        "BulkEndpoint": {
            "value": "https://graph.microsoft.com/v1.0/servicePrincipals/<spid>/synchronization/jobs/<job>/bulkUpload",
            "type": "string",
            "metadata": {
                "description": "URL bulk endpoint App"
            }
        },
        "Domain": {
            "value": "domain.com",
            "type": "string",
            "metadata": {
                "description": "Company domain"
            }
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('LogicAppName')]",
            "location": "[parameters('LogicAppLocation')]",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "snow_uri": {
                            "defaultValue": "[parameters('SnowUri')]",
                            "type": "String"
                        },
                        "graph_uri": {
                            "defaultValue": "https://graph.microsoft.com",
                            "type": "String"
                        },
                        "bulk_endpoint": {
                            "defaultValue": "[parameters('BulkEndpoint')]",
                            "type": "String"
                        },
                        "domain": {
                            "defaultValue": "[parameters('Domain')]",
                            "type": "String"
                        },
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "Every_Three_Hours": {
                            "recurrence": {
                                "interval": 3,
                                "frequency": "Hour"
                            },
                            "evaluatedRecurrence": {
                                "interval": 3,
                                "frequency": "Hour"
                            },
                            "type": "Recurrence"
                        }
                    },
                    "actions": {
                        "Parse_Users": {
                            "runAfter": {
                                "HTTP_Get_Users": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@body('HTTP_Get_Users')",
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "gender": {
                                                        "type": "string"
                                                    },
                                                    "manager": {
                                                        "type": [
                                                            "object",
                                                            "string"
                                                        ],
                                                        "properties": {
                                                            "link": {
                                                                "type": "string"
                                                            },
                                                            "value": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    },
                                                    "location": {
                                                        "type": [
                                                            "object",
                                                            "string"
                                                        ],
                                                        "properties": {
                                                            "link": {
                                                                "type": "string"
                                                            },
                                                            "value": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    },
                                                    "department": {
                                                        "type": [
                                                            "object",
                                                            "string"
                                                        ],
                                                        "properties": {
                                                            "link": {
                                                                "type": "string"
                                                            },
                                                            "value": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    },
                                                    "u_initials": {
                                                        "type": "string"
                                                    },
                                                    "u_azure_department": {
                                                        "type": "string"
                                                    },
                                                    "u_azure_location": {
                                                        "type": "string"
                                                    },
                                                    "last_name": {
                                                        "type": "string"
                                                    },
                                                    "title": {
                                                        "type": "string"
                                                    },
                                                    "user_name": {
                                                        "type": "string"
                                                    },
                                                    "sys_id": {
                                                        "type": "string"
                                                    },
                                                    "phone": {
                                                        "type": "string"
                                                    },
                                                    "mobile_phone": {
                                                        "type": "string"
                                                    },
                                                    "u_personal_mobile_phone": {
                                                        "type": "string"
                                                    },
                                                    "u_personal_email": {
                                                        "type": "string"
                                                    },
                                                    "u_role_keyuser_apsys": {
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "u_correlation_id": {
                                                        "type": "string"
                                                    },
                                                    "u_workload": {
                                                        "type": "string"
                                                    },
                                                    "u_grade": {
                                                        "type": "string"
                                                    },
                                                    "u_degree": {
                                                        "type": "string"
                                                    },
                                                    "first_name": {
                                                        "type": "string"
                                                    },
                                                    "u_employee_start_date": {
                                                        "type": "string"
                                                    },
                                                    "u_employee_end_date": {
                                                        "type": "string"
                                                    },
                                                    "u_access_packages": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": []
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "For_each_Snow_User": {
                            "foreach": "@variables('JSONInputArray')",
                            "actions": {
                                "Until": {
                                    "actions": {
                                        "Compute_sAMAccountName": {
                                            "type": "SetVariable",
                                            "inputs": {
                                                "name": "sAMAccountName",
                                                "value": "@if(equals(variables('SANCounter'),0),concat(substring(items('For_each_Snow_User')?['first_name'],0,1),substring(items('For_each_Snow_User')?['last_name'],0,length(items('For_each_Snow_User')?['last_name']))),concat(substring(items('For_each_Snow_User')?['first_name'],0,1),substring(items('For_each_Snow_User')?['last_name'],0,length(items('For_each_Snow_User')?['last_name'])),variables('SANCounter')))"
                                            }
                                        },
                                        "If_Is_New_User": {
                                            "actions": {
                                                "Compute_Unique_SAN": {
                                                    "runAfter": {
                                                        "HTTP_Check_SAN": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "SetVariable",
                                                    "inputs": {
                                                        "name": "UniqueSAN",
                                                        "value": "@equals(length(body('HTTP_Check_SAN')['value']),0)"
                                                    }
                                                },
                                                "HTTP_Check_SAN": {
                                                    "type": "Http",
                                                    "inputs": {
                                                        "uri": "@{parameters('graph_uri')}/v1.0/users?$filter=userPrincipalName eq '@{concat(concat(variables('sAMAccountName'),'@'),parameters('domain'))}'",
                                                        "method": "GET",
                                                        "authentication": {
                                                            "type": "ManagedServiceIdentity",
                                                            "audience": "parameters('graph_uri')"
                                                        }
                                                    },
                                                    "runtimeConfiguration": {
                                                        "contentTransfer": {
                                                            "transferMode": "Chunked"
                                                        }
                                                    }
                                                },
                                                "Increment_variable": {
                                                    "runAfter": {
                                                        "Compute_Unique_SAN": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "IncrementVariable",
                                                    "inputs": {
                                                        "name": "SANCounter",
                                                        "value": 1
                                                    }
                                                }
                                            },
                                            "runAfter": {
                                                "Compute_sAMAccountName": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "else": {
                                                "actions": {
                                                    "Set_UniqueSAN_True": {
                                                        "type": "SetVariable",
                                                        "inputs": {
                                                            "name": "UniqueSAN",
                                                            "value": true
                                                        }
                                                    }
                                                }
                                            },
                                            "expression": {
                                                "and": [
                                                    {
                                                        "equals": [
                                                            "@items('For_each_Snow_User')?['u_correlation_id']",
                                                            "ENTRAID"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type": "If"
                                        }
                                    },
                                    "runAfter": {
                                        "Is_Manager_Null": [
                                            "Succeeded"
                                        ]
                                    },
                                    "expression": "@equals(variables('UniqueSAN'),true)",
                                    "limit": {
                                        "count": 60,
                                        "timeout": "PT1H"
                                    },
                                    "type": "Until"
                                },
                                "Increment_IterationCount": {
                                    "runAfter": {
                                        "Until2": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "IncrementVariable",
                                    "inputs": {
                                        "name": "IterationCount",
                                        "value": 1
                                    }
                                },
                                "Decrement_NumberOfRecords": {
                                    "runAfter": {
                                        "Increment_IterationCount": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "DecrementVariable",
                                    "inputs": {
                                        "name": "NumberOfRecordsToProcess",
                                        "value": 1
                                    }
                                },
                                "Condition": {
                                    "actions": {
                                        "Append_last_SCIMUser_record_in_the_chunk": {
                                            "type": "AppendToStringVariable",
                                            "inputs": {
                                                "name": "SCIMBulkPayload",
                                                "value": "@outputs('Construct_SCIMUser')"
                                            }
                                        },
                                        "Finalize_SCIMBulkPayload": {
                                            "runAfter": {
                                                "Append_last_SCIMUser_record_in_the_chunk": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "AppendToStringVariable",
                                            "inputs": {
                                                "name": "SCIMBulkPayload",
                                                "value": "  ],\n  \"failOnErrors\": null\n}"
                                            }
                                        },
                                        "Send_SCIMBulkPayload_to_API_endpoint": {
                                            "runAfter": {
                                                "Finalize_SCIMBulkPayload": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Http",
                                            "inputs": {
                                                "uri": "@parameters('bulk_endpoint')",
                                                "method": "POST",
                                                "headers": {
                                                    "Content-Type": "application/scim+json"
                                                },
                                                "body": "@variables('SCIMBulkPayload')",
                                                "authentication": {
                                                    "type": "ManagedServiceIdentity",
                                                    "audience": "parameters('graph_uri')"
                                                }
                                            },
                                            "operationOptions": "DisableAsyncPattern"
                                        },
                                        "Reset_Iteration_Count": {
                                            "runAfter": {
                                                "Send_SCIMBulkPayload_to_API_endpoint": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "SetVariable",
                                            "inputs": {
                                                "name": "IterationCount",
                                                "value": 0
                                            }
                                        },
                                        "Prepare_next_chunk_of_SCIMBulkPayload": {
                                            "runAfter": {
                                                "Reset_Iteration_Count": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "SetVariable",
                                            "inputs": {
                                                "name": "SCIMBulkPayload",
                                                "value": "{\n  \"schemas\": [\n    \"urn:ietf:params:scim:api:messages:2.0:BulkRequest\"\n  ],\n  \"Operations\": ["
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "Construct_SCIMUser": [
                                            "Succeeded"
                                        ]
                                    },
                                    "else": {
                                        "actions": {
                                            "Append_SCIMUser_record": {
                                                "type": "AppendToStringVariable",
                                                "inputs": {
                                                    "name": "SCIMBulkPayload",
                                                    "value": "@concat(outputs('Construct_SCIMUser'),',')"
                                                }
                                            }
                                        }
                                    },
                                    "expression": {
                                        "or": [
                                            {
                                                "equals": [
                                                    "@variables('NumberOfRecordsToProcess')",
                                                    0
                                                ]
                                            },
                                            {
                                                "equals": [
                                                    "@variables('IterationCount')",
                                                    50
                                                ]
                                            }
                                        ]
                                    },
                                    "type": "If"
                                },
                                "Until2": {
                                    "actions": {
                                        "Compute_employeeId": {
                                            "type": "SetVariable",
                                            "inputs": {
                                                "name": "employeeId",
                                                "value": "@if(equals(variables('EIDCounter'),0),substring(items('For_each_Snow_User')?[trim('name')],0,8),concat(substring(items('For_each_Snow_User')?[trim('name')],0,7),variables('EIDCounter')))"
                                            }
                                        },
                                        "If_Is_New_User_2": {
                                            "actions": {
                                                "Compute_Unique_EID": {
                                                    "runAfter": {
                                                        "HTTP_Check_EID": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "SetVariable",
                                                    "inputs": {
                                                        "name": "UniqueEID",
                                                        "value": "@equals(length(body('HTTP_Check_SAN')['value']),0)"
                                                    }
                                                },
                                                "HTTP_Check_EID": {
                                                    "type": "Http",
                                                    "inputs": {
                                                        "uri": "@{parameters('graph_uri')}/v1.0/users?$filter=employeeId eq '@{variables('employeeId')}'",
                                                        "method": "GET",
                                                        "authentication": {
                                                            "type": "ManagedServiceIdentity",
                                                            "audience": "parameters('graph_uri')"
                                                        }
                                                    },
                                                    "runtimeConfiguration": {
                                                        "contentTransfer": {
                                                            "transferMode": "Chunked"
                                                        }
                                                    }
                                                },
                                                "Increment_EID_Counter": {
                                                    "runAfter": {
                                                        "Compute_Unique_EID": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "IncrementVariable",
                                                    "inputs": {
                                                        "name": "EIDCounter",
                                                        "value": 1
                                                    }
                                                }
                                            },
                                            "runAfter": {
                                                "Compute_employeeId": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "else": {
                                                "actions": {
                                                    "Set_Unique_EID_True": {
                                                        "type": "SetVariable",
                                                        "inputs": {
                                                            "name": "UniqueEID",
                                                            "value": true
                                                        }
                                                    }
                                                }
                                            },
                                            "expression": {
                                                "and": [
                                                    {
                                                        "equals": [
                                                            "@items('For_each_Snow_User')?['u_correlation_id']",
                                                            "ENTRAID"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type": "If"
                                        }
                                    },
                                    "runAfter": {
                                        "Until": [
                                            "Succeeded"
                                        ]
                                    },
                                    "expression": "@equals(variables('UniqueEID'),true)",
                                    "limit": {
                                        "count": 60,
                                        "timeout": "PT1H"
                                    },
                                    "type": "Until"
                                },
                                "Construct_SCIMUser": {
                                    "runAfter": {
                                        "Decrement_NumberOfRecords": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Compose",
                                    "inputs": {
                                        "bulkId": "@{guid()}",
                                        "data": {
                                            "addresses": [
                                                {
                                                    "postalCode": "@{body('Parse_Location')?['result']?['zip']}",
                                                    "locality": "@{body('Parse_Location')?['result']?['name']}",
                                                    "country": "@{body('Parse_Location')?['result']?['country']}",
                                                    "region": "@{body('Parse_Location')?['result']?['state']}",
                                                    "streetAddress": "@{body('Parse_Location')?['result']?['street']}",
                                                    "type": "work"
                                                }
                                            ],
                                            "displayName": "@{items('For_each_Snow_User')?['name']}",
                                            "externalId": "@{items('For_each_Snow_User')?['u_initials']}",
                                            "id": "@{variables('sAMAccountName')}",
                                            "name": {
                                                "familyName": "@{items('For_each_Snow_User')?['last_name']}",
                                                "givenName": "@{items('For_each_Snow_User')?['first_name']}"
                                            },
                                            "phoneNumbers": [
                                                {
                                                    "type": "mobile",
                                                    "value": "@{items('For_each_Snow_User')?['u_personal_mobile_phone']}"
                                                },
                                                {
                                                    "type": "work",
                                                    "value": "@{items('For_each_Snow_User')?['phone']}"
                                                }
                                            ],
                                            "title": "@{items('For_each_Snow_User')?['title']}",
                                            "schemas": [
                                                "urn:ietf:params:scim:schemas:core:2.0:User",
                                                "urn:ietf:params:scim:schemas:extension:enterprise:2.0:User",
                                                "urn:ietf:params:scim:schemas:extension:pgsa:1.0:User"
                                            ],
                                            "urn:ietf:params:scim:schemas:extension:enterprise:2.0:User": {
                                                "department": "@{body('Parse_Department')?['result']?['name']}",
                                                "employeeNumber": "@{variables('employeeId')}"
                                            },
                                            "urn:ietf:params:scim:schemas:extension:pgsa:1.0:User": {
                                                "gender": "@{items('For_each_Snow_User')?['gender']}",
                                                "employeeStartDate": "@{items('For_each_Snow_User')?['u_employee_start_date']}",
                                                "employeeLeaveDate": "@{items('For_each_Snow_User')?['u_employee_end_date']}",
                                                "apsys": "@{items('For_each_Snow_User')?['u_role_keyuser_apsys']}",
                                                "diploma": "@{items('For_each_Snow_User')?['u_degree']}",
                                                "grade": "@{items('For_each_Snow_User')?['u_grade']}",
                                                "occupationRate": "@{items('For_each_Snow_User')?['u_occupation_rate']}",
                                                "office": "@{body('Parse_Location')?['result']?['city']}",
                                                "snowId": "@{items('For_each_Snow_User')?['sys_id']}",
                                                "Manager": "@{body('Parse_Manager')?['result']?['last_name']}",
                                                "poBox": "@{body('Parse_Location')?['result']?['u_po_box']}",
                                                "personalMail": "@{items('For_each_Snow_User')?['u_personal_email']}"
                                            }
                                        },
                                        "method": "POST",
                                        "path": "/Users"
                                    }
                                },
                                "Reset_SAN_Counter": {
                                    "type": "SetVariable",
                                    "inputs": {
                                        "name": "SANCounter",
                                        "value": 0
                                    }
                                },
                                "Reset_EID_Counter": {
                                    "runAfter": {
                                        "Reset_SAN_Counter": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "SetVariable",
                                    "inputs": {
                                        "name": "EIDCounter",
                                        "value": 0
                                    }
                                },
                                "Is_Location_Null": {
                                    "actions": {},
                                    "runAfter": {
                                        "Reset_EID_Counter": [
                                            "Succeeded"
                                        ]
                                    },
                                    "else": {
                                        "actions": {
                                            "Get_Location_Details": {
                                                "type": "Http",
                                                "inputs": {
                                                    "uri": "@items('For_each_Snow_User')?['location']['link']",
                                                    "method": "GET",
                                                    "headers": {
                                                        "Authorization": "Bearer @{body('Parse_JSON')['access_token']}"
                                                    },
                                                    "queries": {
                                                        "sysparm_fields": "zip,country,fullname,city,name,street,state,u_po_box"
                                                    }
                                                },
                                                "runtimeConfiguration": {
                                                    "contentTransfer": {
                                                        "transferMode": "Chunked"
                                                    }
                                                }
                                            },
                                            "Parse_Location": {
                                                "runAfter": {
                                                    "Get_Location_Details": [
                                                        "Succeeded"
                                                    ]
                                                },
                                                "type": "ParseJson",
                                                "inputs": {
                                                    "content": "@body('Get_Location_Details')",
                                                    "schema": {
                                                        "type": "object",
                                                        "properties": {
                                                            "result": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "zip": {
                                                                        "type": "string"
                                                                    },
                                                                    "country": {
                                                                        "type": "string"
                                                                    },
                                                                    "full_name": {
                                                                        "type": "string"
                                                                    },
                                                                    "city": {
                                                                        "type": "string"
                                                                    },
                                                                    "u_po_box": {
                                                                        "type": "string"
                                                                    },
                                                                    "street": {
                                                                        "type": "string"
                                                                    },
                                                                    "name": {
                                                                        "type": "string"
                                                                    },
                                                                    "state": {
                                                                        "type": "string"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "equals": [
                                                    "@items('For_each_Snow_User')?['location']",
                                                    ""
                                                ]
                                            }
                                        ]
                                    },
                                    "type": "If"
                                },
                                "Is_Manager_Null": {
                                    "actions": {},
                                    "runAfter": {
                                        "Is_Department_Null": [
                                            "Succeeded"
                                        ]
                                    },
                                    "else": {
                                        "actions": {
                                            "Get_Manager_Details": {
                                                "type": "Http",
                                                "inputs": {
                                                    "uri": "@{items('For_each_Snow_User')?['manager']['link']}",
                                                    "method": "GET",
                                                    "headers": {
                                                        "Authorization": "Bearer @{body('Parse_JSON')['access_token']}"
                                                    },
                                                    "queries": {
                                                        "sysparm_fields": "user_name,sys_id,last_name"
                                                    }
                                                },
                                                "runtimeConfiguration": {
                                                    "contentTransfer": {
                                                        "transferMode": "Chunked"
                                                    }
                                                }
                                            },
                                            "Parse_Manager": {
                                                "runAfter": {
                                                    "Get_Manager_Details": [
                                                        "Succeeded"
                                                    ]
                                                },
                                                "type": "ParseJson",
                                                "inputs": {
                                                    "content": "@body('Get_Manager_Details')",
                                                    "schema": {
                                                        "type": "object",
                                                        "properties": {
                                                            "result": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "user_name": {
                                                                        "type": "string"
                                                                    },
                                                                    "sys_id": {
                                                                        "type": "string"
                                                                    },
                                                                    "last_name": {
                                                                        "type": "string"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "Set_MGRSAN": {
                                                "runAfter": {
                                                    "Parse_Manager": [
                                                        "Succeeded"
                                                    ]
                                                },
                                                "type": "SetVariable",
                                                "inputs": {
                                                    "name": "managerSAN",
                                                    "value": "@first(split(body('Parse_Manager')?['result']?['user_name'],'@'))"
                                                }
                                            },
                                            "Set_managerEmployeeNumber": {
                                                "runAfter": {
                                                    "Set_MGRSAN": [
                                                        "Succeeded"
                                                    ]
                                                },
                                                "type": "SetVariable",
                                                "inputs": {
                                                    "name": "managerEmplyeeNumber",
                                                    "value": "@body('Parse_Manager')?['result']?['sys_id']"
                                                }
                                            }
                                        }
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "equals": [
                                                    "@items('For_each_Snow_User')?['manager']",
                                                    ""
                                                ]
                                            }
                                        ]
                                    },
                                    "type": "If"
                                },
                                "Is_Department_Null": {
                                    "actions": {},
                                    "runAfter": {
                                        "Is_Location_Null": [
                                            "Succeeded"
                                        ]
                                    },
                                    "else": {
                                        "actions": {
                                            "Get_Department_Details": {
                                                "type": "Http",
                                                "inputs": {
                                                    "uri": "@{items('For_each_Snow_User')?['department']['link']}",
                                                    "method": "GET",
                                                    "headers": {
                                                        "Authorization": "Bearer @{body('Parse_JSON')['access_token']}"
                                                    },
                                                    "queries": {
                                                        "sysparm_fields": "name"
                                                    }
                                                },
                                                "runtimeConfiguration": {
                                                    "contentTransfer": {
                                                        "transferMode": "Chunked"
                                                    }
                                                }
                                            },
                                            "Parse_Department": {
                                                "runAfter": {
                                                    "Get_Department_Details": [
                                                        "Succeeded"
                                                    ]
                                                },
                                                "type": "ParseJson",
                                                "inputs": {
                                                    "content": "@body('Get_Department_Details')",
                                                    "schema": {
                                                        "type": "object",
                                                        "properties": {
                                                            "result": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "name": {
                                                                        "type": "string"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "equals": [
                                                    "@items('For_each_Snow_User')?['department']",
                                                    ""
                                                ]
                                            }
                                        ]
                                    },
                                    "type": "If"
                                },
                                "Update_Correlation": {
                                    "actions": {
                                        "Set_UPN": {
                                            "type": "SetVariable",
                                            "inputs": {
                                                "name": "userPrincipalName",
                                                "value": "@concat(concat(variables('sAMAccountName'),'@'),parameters('domain'))"
                                            }
                                        },
                                        "Update_Snow_Status_and_UserName_with_UPN": {
                                            "runAfter": {
                                                "Set_UPN": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Http",
                                            "inputs": {
                                                "uri": "@{parameters('snow_uri')}/api/now/table/sys_user/@{items('For_each_Snow_User')['sys_id']}",
                                                "method": "PUT",
                                                "headers": {
                                                    "Authorization": "Bearer @{body('Parse_JSON')['access_token']}"
                                                },
                                                "body": {
                                                    "user_name": "@{variables('userPrincipalName')}",
                                                    "u_azure_status": "active",
                                                    "u_correlation_id": "waiting_entra_creation"
                                                }
                                            },
                                            "runtimeConfiguration": {
                                                "contentTransfer": {
                                                    "transferMode": "Chunked"
                                                }
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "Until2": [
                                            "Succeeded"
                                        ]
                                    },
                                    "else": {
                                        "actions": {
                                            "HTTP_Get_Corresponding_GUID_1-copy": {
                                                "type": "Http",
                                                "inputs": {
                                                    "uri": "@{parameters('graph_uri')}/v1.0/users/@{items('For_each_Snow_User')['user_name']}",
                                                    "method": "GET",
                                                    "queries": {
                                                        "$select": "id"
                                                    },
                                                    "authentication": {
                                                        "type": "ManagedServiceIdentity",
                                                        "audience": "parameters('graph_uri')"
                                                    }
                                                },
                                                "runtimeConfiguration": {
                                                    "contentTransfer": {
                                                        "transferMode": "Chunked"
                                                    }
                                                }
                                            },
                                            "Parse_Corresponding_GUID_1-copy": {
                                                "runAfter": {
                                                    "HTTP_Get_Corresponding_GUID_1-copy": [
                                                        "Succeeded"
                                                    ]
                                                },
                                                "type": "ParseJson",
                                                "inputs": {
                                                    "content": "@body('HTTP_Get_Corresponding_GUID_1-copy')",
                                                    "schema": {
                                                        "type": "object",
                                                        "properties": {
                                                            "id": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "HTTP_Update_Snow_User_GUID_1-copy": {
                                                "runAfter": {
                                                    "Parse_Corresponding_GUID_1-copy": [
                                                        "Succeeded"
                                                    ]
                                                },
                                                "type": "Http",
                                                "inputs": {
                                                    "uri": "@{parameters('snowuri')}/api/now/table/sys_user/@{items('For_each_Snow_User')['sys_id']}",
                                                    "method": "PUT",
                                                    "headers": {
                                                        "Authorization": "Bearer @{body('Parse_JSON')['access_token']}"
                                                    },
                                                    "body": {
                                                        "u_correlation_id": "@{body('Parse_Corresponding_GUID_1-copy')?['id']}"
                                                    }
                                                },
                                                "runtimeConfiguration": {
                                                    "contentTransfer": {
                                                        "transferMode": "Chunked"
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "not": {
                                                    "endsWith": [
                                                        "@items('For_each_Snow_User')?['user_name']",
                                                        "@parameters('domain')"
                                                    ]
                                                }
                                            }
                                        ]
                                    },
                                    "type": "If"
                                },
                                "Manage_access_Packages": {
                                    "actions": {
                                        "Get_User_Commun": {
                                            "runAfter": {
                                                "Parse_Commun_AP": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Http",
                                            "inputs": {
                                                "uri": "parameters('graph_uri')/v1.0/identityGovernance/entitlementManagement/assignments?$expand=accessPackage,target&$filter=accessPackage/displayName eq 'Commun' and target/objectId eq '@{items('For_each_Snow_User')?['u_correlation_id']}'&$select=id,status,accessPackage,target",
                                                "method": "GET",
                                                "authentication": {
                                                    "type": "ManagedServiceIdentity",
                                                    "audience": "parameters('graph_uri')"
                                                }
                                            },
                                            "runtimeConfiguration": {
                                                "contentTransfer": {
                                                    "transferMode": "Chunked"
                                                }
                                            }
                                        },
                                        "Get_Commun_AP": {
                                            "type": "Http",
                                            "inputs": {
                                                "uri": "@{parameters('graph_uri')}/v1.0/identityGovernance/entitlementManagement/accessPackages",
                                                "method": "GET",
                                                "queries": {
                                                    "$filter": "displayName eq 'Commun'",
                                                    "$expand": "assignmentPolicies"
                                                },
                                                "authentication": {
                                                    "type": "ManagedServiceIdentity",
                                                    "audience": "parameters('graph_uri')"
                                                }
                                            },
                                            "runtimeConfiguration": {
                                                "contentTransfer": {
                                                    "transferMode": "Chunked"
                                                }
                                            }
                                        },
                                        "Parse_Commun_AP": {
                                            "runAfter": {
                                                "Get_Commun_AP": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "ParseJson",
                                            "inputs": {
                                                "content": "@body('Get_Commun_AP')",
                                                "schema": {
                                                    "type": "object",
                                                    "properties": {
                                                        "value": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "id": {
                                                                        "type": "string"
                                                                    },
                                                                    "displayName": {
                                                                        "type": "string"
                                                                    },
                                                                    "assignmentPolicies": {
                                                                        "type": "array",
                                                                        "items": {
                                                                            "type": "object",
                                                                            "properties": {
                                                                                "id": {
                                                                                    "type": "string"
                                                                                },
                                                                                "displayName": {
                                                                                    "type": "string"
                                                                                },
                                                                                "description": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "id",
                                                                                "displayName",
                                                                                "description"
                                                                            ]
                                                                        }
                                                                    }
                                                                },
                                                                "required": [
                                                                    "id",
                                                                    "displayName",
                                                                    "assignmentPolicies"
                                                                ]
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "User_has_Commun": {
                                            "actions": {},
                                            "runAfter": {
                                                "Get_User_Commun": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "else": {
                                                "actions": {
                                                    "Assign_Commun_to_User": {
                                                        "type": "Http",
                                                        "inputs": {
                                                            "uri": "@{parameters('graph_uri')}/v1.0/identityGovernance/entitlementManagement/assignmentRequests",
                                                            "method": "POST",
                                                            "body": {
                                                                "assignment": {
                                                                    "targetId": "@{items('For_each_Snow_User')?['u_correlation_id']}",
                                                                    "assignmentPolicyId": "@{body('Parse_Commun_AP')['value'][0]['assignmentPolicies'][0]['id']}",
                                                                    "accessPackageId": "@{body('Parse_Commun_AP')['value'][0]['id']}"
                                                                },
                                                                "requestType": "adminAdd"
                                                            },
                                                            "authentication": {
                                                                "type": "ManagedServiceIdentity",
                                                                "audience": "parameters('graph_uri')"
                                                            }
                                                        },
                                                        "runtimeConfiguration": {
                                                            "contentTransfer": {
                                                                "transferMode": "Chunked"
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "expression": {
                                                "or": [
                                                    {
                                                        "not": {
                                                            "equals": [
                                                                "@length(body('Get_User_Commun')['value'])",
                                                                0
                                                            ]
                                                        }
                                                    }
                                                ]
                                            },
                                            "type": "If"
                                        }
                                    },
                                    "type": "Scope"
                                }
                            },
                            "runAfter": {
                                "Initialize_variables": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach",
                            "runtimeConfiguration": {
                                "concurrency": {
                                    "repetitions": 1
                                }
                            }
                        },
                        "HTTP_Get_Users": {
                            "runAfter": {
                                "Parse_JSON": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "uri": "@{parameters('snowuri')}/api/now/table/sys_user",
                                "method": "GET",
                                "headers": {
                                    "Authorization": "Bearer @{body('Parse_JSON')['access_token']}",
                                    "Content-Type": "application/json",
                                    "Accept": "application/json"
                                },
                                "queries": {
                                    "sysparm_query": "u_correlation_id!=null",
                                    "sysparm_fields": "gender,first_name,last_name,name,u_initials,u_grade,title,manager,u_degree,u_azure_department,u_workload,u_start_date,u_end_date,mobile_phone,phone,u_personal_mobile_phone,u_personal_email,u_role_keyuser_apsys,u_azure_location,sys_id,u_correlation_id,u_employee_start_date,u_employee_end_date,location,manager,department,user_name,u_access_packages"
                                }
                            },
                            "runtimeConfiguration": {
                                "contentTransfer": {
                                    "transferMode": "Chunked"
                                }
                            }
                        },
                        "HTTP_get_token": {
                            "runAfter": {
                                "Get_snowpassword": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "uri": "@{parameters('snowuri')}/oauth_token.do",
                                "method": "POST",
                                "headers": {
                                    "Content-Type": "application/x-www-form-urlencoded",
                                    "Accept": "application/json"
                                },
                                "body": "@concat('grant_type=password&client_secret=', encodeUriComponent(body('Get_snowclientsecret')?['value']), '&client_id=', body('Get_snowclientid')?['value'], '&username=', body('Get_snowusername')?['value'], '&password=', encodeUriComponent(body('Get_snowpassword')?['value']))"
                            },
                            "runtimeConfiguration": {
                                "contentTransfer": {
                                    "transferMode": "Chunked"
                                }
                            }
                        },
                        "Parse_JSON": {
                            "runAfter": {
                                "HTTP_get_token": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@body('HTTP_get_token')",
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "access_token": {
                                            "type": "string",
                                            "description": "The access token for authentication"
                                        },
                                        "refresh_token": {
                                            "type": "string",
                                            "description": "The refresh token to obtain new access tokens"
                                        },
                                        "scope": {
                                            "type": "string",
                                            "description": "The scope of the access token"
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "description": "The type of token, typically 'Bearer'"
                                        },
                                        "expires_in": {
                                            "type": "integer",
                                            "description": "Token expiration time in seconds"
                                        }
                                    },
                                    "required": [
                                        "access_token",
                                        "refresh_token",
                                        "scope",
                                        "token_type",
                                        "expires_in"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        },
                        "Initialize_variables": {
                            "runAfter": {
                                "Parse_Users": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "JSONInputArray",
                                        "type": "array",
                                        "value": "@body('Parse_Users')?['result']"
                                    },
                                    {
                                        "name": "NumberOfRecordsToProcess",
                                        "type": "integer",
                                        "value": "@length(body('Parse_Users')?['result'])"
                                    },
                                    {
                                        "name": "IterationCount",
                                        "type": "integer",
                                        "value": 0
                                    },
                                    {
                                        "name": "SCIMBulkPayload",
                                        "type": "string",
                                        "value": "{\n  \"schemas\": [\n    \"urn:ietf:params:scim:api:messages:2.0:BulkRequest\"\n  ],\n  \"Operations\": [\n"
                                    },
                                    {
                                        "name": "InvocationDateTime",
                                        "type": "string",
                                        "value": "@{utcNow()}"
                                    },
                                    {
                                        "name": "sAMAccountName",
                                        "type": "string",
                                        "value": "\"\""
                                    },
                                    {
                                        "name": "mailAddress",
                                        "type": "string",
                                        "value": "\"\""
                                    },
                                    {
                                        "name": "SANCounter",
                                        "type": "integer",
                                        "value": 0
                                    },
                                    {
                                        "name": "UniqueSAN",
                                        "type": "boolean",
                                        "value": false
                                    },
                                    {
                                        "name": "EIDCounter",
                                        "type": "integer",
                                        "value": 0
                                    },
                                    {
                                        "name": "employeeId",
                                        "type": "string",
                                        "value": "\"\""
                                    },
                                    {
                                        "name": "UniqueEID",
                                        "type": "boolean",
                                        "value": false
                                    },
                                    {
                                        "name": "userPrincipalName",
                                        "type": "string"
                                    },
                                    {
                                        "name": "managerSAN",
                                        "type": "string"
                                    },
                                    {
                                        "name": "managerEmplyeeNumber",
                                        "type": "string"
                                    },
                                    {
                                        "name": "POBoxes",
                                        "type": "object",
                                        "value": {
                                            "Lausanne": {
                                                "POBox": "190"
                                            },
                                            "Genève": {
                                                "POBox": "3456"
                                            },
                                            "La Chaux-de-Fonds": {
                                                "POBox": ""
                                            },
                                            "Neuchâtel": {
                                                "POBox": "1873"
                                            },
                                            "Nyon": {
                                                "POBox": "1194"
                                            },
                                            "Yverdon-les-Bains": {
                                                "POBox": "58"
                                            }
                                        }
                                    },
                                    {
                                        "name": "ParsedAP",
                                        "type": "array"
                                    }
                                ]
                            }
                        },
                        "Get_snowclientid": {
                            "runAfter": {},
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['keyvault-1']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/secrets/@{encodeURIComponent('snowclientid')}/value"
                            },
                            "runtimeConfiguration": {
                                "secureData": {
                                    "properties": [
                                        "inputs",
                                        "outputs"
                                    ]
                                }
                            }
                        },
                        "Get_snowclientsecret": {
                            "runAfter": {
                                "Get_snowclientid": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['keyvault-1']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/secrets/@{encodeURIComponent('snowclientsecret')}/value"
                            },
                            "runtimeConfiguration": {
                                "secureData": {
                                    "properties": [
                                        "inputs",
                                        "outputs"
                                    ]
                                }
                            }
                        },
                        "Get_snowusername": {
                            "runAfter": {
                                "Get_snowclientsecret": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['keyvault-1']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/secrets/@{encodeURIComponent('snowusername')}/value"
                            },
                            "runtimeConfiguration": {
                                "secureData": {
                                    "properties": [
                                        "inputs",
                                        "outputs"
                                    ]
                                }
                            }
                        },
                        "Get_snowpassword": {
                            "runAfter": {
                                "Get_snowusername": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['keyvault-1']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/secrets/@{encodeURIComponent('snowsecret')}/value"
                            },
                            "runtimeConfiguration": {
                                "secureData": {
                                    "properties": [
                                        "inputs",
                                        "outputs"
                                    ]
                                }
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "type": "Object",
                        "value": {
                            "keyvault-1": {
                                "id": "/subscriptions/41271998-9818-49dd-8b6a-2ca5ec3a7c50/providers/Microsoft.Web/locations/switzerlandwest/managedApis/keyvault",
                                "connectionId": "[parameters('KeyVaultName')]",
                                "connectionName": "keyvault-connection",
                                "connectionProperties": {
                                    "authentication": {
                                        "type": "ManagedServiceIdentity"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    ]
}