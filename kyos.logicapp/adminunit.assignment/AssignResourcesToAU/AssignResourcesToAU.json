{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "logicAppName": {
      "type": "string"
    },
    "location": {
      "defaultValue": "[resourceGroup().location]",
       "type": "string",
       "metadata": {
           "description": "Location for all resources"
       }
    },
    "authTenant": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Azure AD Tenant ID (optional - leave empty to use managed identity or default authentication)"
      }
    },
    "authClientId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Azure AD Application Client ID (optional - leave empty to use managed identity)"
      }
    },
    "authClientSecret": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Azure AD Application Client Secret (optional - leave empty to use managed identity)"
      }
    },
    "extensionAttributeKey": {
      "type": "string",
      "defaultValue": "extensionAttribute14",
      "metadata": {
        "description": "The extension attribute key to use for user filtering (e.g., extensionAttribute14, extensionAttribute10, extensionAttribute7)"
      }
    },
    "adminUnitId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The administrative unit ID where resources will be assigned (optional)"
      }
    },
    "userPrefix": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Prefix for filtering users (optional, default: FR-)"
      }
    },
    "userPattern": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Domain pattern for filtering users (optional, default: hefr.ch)"
      }
    },
    "extensionAttributeValue1": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "First extension attribute value to match (optional)"
      }
    },
    "extensionAttributeValue2": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Second extension attribute value to match (optional)"
      }
    },
    "extensionAttributeValue3": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Third extension attribute value to match (optional)"
      }
    },
    "runbookName": {
      "type": "string",
      "defaultValue": "get-filtered-users",
      "metadata": {
        "description": "Name of the Azure Automation runbook to execute (optional, default: get-filtered-users)"
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.Logic/workflows",
      "apiVersion": "2016-06-01",
      "name": "[parameters('logicAppName')]",
      "location": "[parameters('location')]",
      "properties": {
        "definition": {
            "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
            "contentVersion": "1.0.0.0",
            "triggers": {
                "Recurrence": {
                    "type": "Recurrence",
                    "recurrence": {
                        "interval": 1,
                        "frequency": "Day",
                        "timeZone": "Romance Standard Time",
                        "schedule": {
                            "hours": [
                                22
                            ],
                            "minutes": [
                                0
                            ]
                        }
                    }
                }
            },
            "actions": {
                "Parse_JSON_Users": {
                    "type": "ParseJson",
                    "inputs": {
                        "content": "@outputs('Compose_Runbook_Output')",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "string"
                                    },
                                    "displayName": {
                                        "type": "string"
                                    },
                                    "mail": {
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    }
                                },
                                "required": [
                                    "id",
                                    "displayName",
                                    "mail"
                                ],
                                "additionalProperties": true
                            }
                        }
                    },
                    "runAfter": {
                        "Compose_Runbook_Output": [
                            "Succeeded"
                        ]
                    }
                },
                "For_each": {
                    "type": "Foreach",
                    "foreach": "@body('Parse_JSON_Users')",
                    "actions": {
                        "HTTP_Check_AdminUnit_MemberOf": {
                            "type": "Http",
                            "inputs": {
                                "uri": "https://graph.microsoft.com/v1.0/users/@{item()?['id']}/memberOf/microsoft.graph.administrativeUnit?$select=id.displayName",
                                "method": "GET",
                                "authentication": {
                                  "type": "ActiveDirectoryOAuth",
                                  "tenant": "[parameters('authTenant')]",
                                  "audience": "https://graph.microsoft.com",
                                  "clientId": "[parameters('authClientId')]",
                                  "secret": "[parameters('authClientSecret')]"
                                }
                            },
                            "runtimeConfiguration": {
                                "contentTransfer": {
                                    "transferMode": "Chunked"
                                },
                                "paginationPolicy": {
                                    "minimumItemCount": 50000
                                }
                            }
                        },
                        "Parse_JSON_AdminUnit_MemberOf": {
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@body('HTTP_Check_AdminUnit_MemberOf')",
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@@odata.context": {
                                            "type": "string"
                                        },
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "string"
                                                    },
                                                    "displayName": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "HTTP_Check_AdminUnit_MemberOf": [
                                    "Succeeded"
                                ]
                            }
                        },
                        "Condition": {
                            "type": "If",
                            "expression": {
                                "and": [
                                    {
                                        "equals": [
                                            "@length(body('HTTP_Check_AdminUnit_MemberOf')?['value'])",
                                            0
                                        ]
                                    }
                                ]
                            },
                            "actions": {
                                "Condition_2": {
                                    "type": "If",
                                    "expression": {
                                        "or": [
                                            {
                                                "startsWith": [
                                                    "@item()?['displayName']",
                                                    "@variables('UsersRulesMapping')[0]['Prefix']"
                                                ]
                                            },
                                            {
                                                "endsWith": [
                                                    "@item()?['userPrincipalName']",
                                                    "@variables('UsersRulesMapping')[0]['Pattern']"
                                                ]
                                            },
                                            {
                                                "equals": [
                                                    "@item()[parameters('extensionAttributeKey')]",
                                                    "@variables('UsersRulesMapping')[0]['extensionAttribute14_1']"
                                                ]
                                            },
                                            {
                                                "equals": [
                                                    "@item()[parameters('extensionAttributeKey')]",
                                                    "@variables('UsersRulesMapping')[0]['extensionAttribute14_2']"
                                                ]
                                            },
                                            {
                                                "equals": [
                                                    "@item()[parameters('extensionAttributeKey')]",
                                                    "@variables('UsersRulesMapping')[0]['extensionAttribute14_3']"
                                                ]
                                            }
                                        ]
                                    },
                                    "actions": {
                                        "HTTP_Post_User_to_Admin_Unit": {
                                            "type": "Http",
                                            "inputs": {
                                                "uri": "https://graph.microsoft.com/beta/administrativeUnits/@{variables('UsersRulesMapping')[0]['adminUnitId']}/members/$ref",
                                                "method": "POST",
                                                "body": {
                                                    "@@odata.id": "https://graph.microsoft.com/v1.0/users/@{item()?['id']}"
                                                },
                                                "authentication": {
                                                  "type": "ActiveDirectoryOAuth",
                                                  "tenant": "[parameters('authTenant')]",
                                                  "audience": "https://graph.microsoft.com",
                                                  "clientId": "[parameters('authClientId')]",
                                                  "secret": "[parameters('authClientSecret')]"
                                                }
                                            },
                                            "runtimeConfiguration": {
                                                "contentTransfer": {
                                                    "transferMode": "Chunked"
                                                }
                                            }
                                        }
                                    },
                                    "else": {
                                        "actions": {}
                                    }
                                }
                            },
                            "else": {
                                "actions": {}
                            },
                            "runAfter": {
                                "Parse_JSON_AdminUnit_MemberOf": [
                                    "Succeeded"
                                ]
                            }
                        }
                    },
                    "runAfter": {
                        "Parse_JSON_Users": [
                            "Succeeded"
                        ]
                    }
                },
                "Initialize_UsersRulesMapping": {
                    "type": "InitializeVariable",
                    "inputs": {
                        "variables": [
                            {
                                "name": "UsersRulesMapping",
                                "type": "array",
                                "value": [
                                    {
                                        "Prefix": "[parameters('userPrefix')]",
                                        "Pattern": "[parameters('userPattern')]",
                                        "extensionAttribute14_1": "[parameters('extensionAttributeValue1')]",
                                        "extensionAttribute14_2": "[parameters('extensionAttributeValue2')]",
                                        "extensionAttribute14_3": "[parameters('extensionAttributeValue3')]",
                                        "adminUnitId": "[parameters('adminUnitId')]"
                                    }
                                ]
                            }
                        ]
                    },
                    "runAfter": {}
                },
                "Initialize_Prefix": {
                    "type": "InitializeVariable",
                    "inputs": {
                        "variables": [
                            {
                                "name": "PrefixRule",
                                "type": "array",
                                "value": [
                                    {
                                        "Prefix": "[parameters('userPrefix')]",
                                        "adminUnitId": "[parameters('adminUnitId')]"
                                    }
                                ]
                            }
                        ]
                    },
                    "runAfter": {}
                },
                "HTTP_Groups": {
                    "type": "Http",
                    "inputs": {
                        "uri": "https://graph.microsoft.com/v1.0/groups?$filter=startswith(displayName,'@{variables('PrefixRule')[0]['Prefix']}')&$select=id,displayName",
                        "method": "GET",
                        "authentication": {
                          "type": "ActiveDirectoryOAuth",
                          "tenant": "[parameters('authTenant')]",
                          "audience": "https://graph.microsoft.com",
                          "clientId": "[parameters('authClientId')]",
                          "secret": "[parameters('authClientSecret')]"
                        }
                    },
                    "runAfter": {
                        "Initialize_Prefix": [
                            "Succeeded"
                        ]
                    },
                    "runtimeConfiguration": {
                        "contentTransfer": {
                            "transferMode": "Chunked"
                        },
                        "paginationPolicy": {
                            "minimumItemCount": 50000
                        }
                    }
                },
                "Parse_JSON_Groups": {
                    "type": "ParseJson",
                    "inputs": {
                        "content": "@body('HTTP_Groups')",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "@@odata.context": {
                                    "type": "string"
                                },
                                "value": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "displayName": {
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "id",
                                            "displayName"
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "runAfter": {
                        "HTTP_Groups": [
                            "Succeeded"
                        ]
                    }
                },
                "For_each_Groups": {
                    "type": "Foreach",
                    "foreach": "@body('Parse_JSON_Groups')?['value']",
                    "actions": {
                        "HTTP_Check_Groups_Admin_Unit_MemberOf": {
                            "type": "Http",
                            "inputs": {
                                "uri": "https://graph.microsoft.com/v1.0/groups/@{item()?['id']}/memberOf/microsoft.graph.administrativeUnit?$select=id.displayName",
                                "method": "GET",
                                "authentication": {
                                  "type": "ActiveDirectoryOAuth",
                                  "tenant": "[parameters('authTenant')]",
                                  "audience": "https://graph.microsoft.com",
                                  "clientId": "[parameters('authClientId')]",
                                  "secret": "[parameters('authClientSecret')]"
                                }
                            },
                            "runtimeConfiguration": {
                                "contentTransfer": {
                                    "transferMode": "Chunked"
                                },
                                "paginationPolicy": {
                                    "minimumItemCount": 50000
                                }
                            }
                        },
                        "Parse_JSON_Groups_AdminUnit_MemberOf": {
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@body('HTTP_Check_Groups_Admin_Unit_MemberOf')",
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@@odata.context": {
                                            "type": "string"
                                        },
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "string"
                                                    },
                                                    "displayName": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "HTTP_Check_Groups_Admin_Unit_MemberOf": [
                                    "Succeeded"
                                ]
                            }
                        },
                        "Condition_Groups": {
                            "type": "If",
                            "expression": {
                                "and": [
                                    {
                                        "equals": [
                                            "@length(body('Parse_JSON_Groups_AdminUnit_MemberOf')?['value'])",
                                            0
                                        ]
                                    }
                                ]
                            },
                            "actions": {
                                "Condition_Groups_2": {
                                    "type": "If",
                                    "expression": {
                                        "and": [
                                            {
                                                "startsWith": [
                                                    "@item()?['displayName']",
                                                    "@variables('PrefixRule')[0]['Prefix']"
                                                ]
                                            }
                                        ]
                                    },
                                    "actions": {
                                        "HTTP_Post_Group_to_Admin_Unit": {
                                            "type": "Http",
                                            "inputs": {
                                                "uri": "https://graph.microsoft.com/beta/administrativeUnits/@{variables('PrefixRule')[0]['adminUnitId']}/members/$ref",
                                                "method": "POST",
                                                "body": {
                                                    "@@odata.id": "https://graph.microsoft.com/v1.0/groups/@{item()?['id']}"
                                                },
                                                "authentication": {
                                                  "type": "ActiveDirectoryOAuth",
                                                  "tenant": "[parameters('authTenant')]",
                                                  "audience": "https://graph.microsoft.com",
                                                  "clientId": "[parameters('authClientId')]",
                                                  "secret": "[parameters('authClientSecret')]"
                                                }
                                            },
                                            "runtimeConfiguration": {
                                                "contentTransfer": {
                                                    "transferMode": "Chunked"
                                                }
                                            }
                                        }
                                    },
                                    "else": {
                                        "actions": {}
                                    }
                                }
                            },
                            "else": {
                                "actions": {}
                            },
                            "runAfter": {
                                "Parse_JSON_Groups_AdminUnit_MemberOf": [
                                    "Succeeded"
                                ]
                            }
                        }
                    },
                    "runAfter": {
                        "Parse_JSON_Groups": [
                            "Succeeded"
                        ]
                    }
                },
                "HTTP_Devices": {
                    "type": "Http",
                    "inputs": {
                        "uri": "https://graph.microsoft.com/v1.0/devices?$filter=startswith(displayName,'@{variables('PrefixRule')[0]['Prefix']}')&$select=id,displayName",
                        "method": "GET",
                        "authentication": {
                          "type": "ActiveDirectoryOAuth",
                          "tenant": "[parameters('authTenant')]",
                          "audience": "https://graph.microsoft.com",
                          "clientId": "[parameters('authClientId')]",
                          "secret": "[parameters('authClientSecret')]"
                        }
                    },
                    "runAfter": {
                        "Initialize_Prefix": [
                            "Succeeded"
                        ]
                    },
                    "runtimeConfiguration": {
                        "contentTransfer": {
                            "transferMode": "Chunked"
                        },
                        "paginationPolicy": {
                            "minimumItemCount": 50000
                        }
                    }
                },
                "Parse_JSON_Devices": {
                    "type": "ParseJson",
                    "inputs": {
                        "content": "@body('HTTP_Devices')",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "@@odata.context": {
                                    "type": "string"
                                },
                                "value": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "displayName": {
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "id",
                                            "displayName"
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "runAfter": {
                        "HTTP_Devices": [
                            "Succeeded"
                        ]
                    }
                },
                "For_each_Devices": {
                    "type": "Foreach",
                    "foreach": "@body('Parse_JSON_Devices')?['value']",
                    "actions": {
                        "HTTP_Check_Devices_Admin_Unit_MemberOf": {
                            "type": "Http",
                            "inputs": {
                                "uri": "https://graph.microsoft.com/v1.0/devices@{item()?['id']}/memberOf/microsoft.graph.administrativeUnit?$select=id.displayName",
                                "method": "GET",
                                "authentication": {
                                  "type": "ActiveDirectoryOAuth",
                                  "tenant": "[parameters('authTenant')]",
                                  "audience": "https://graph.microsoft.com",
                                  "clientId": "[parameters('authClientId')]",
                                  "secret": "[parameters('authClientSecret')]"
                                }
                            },
                            "runtimeConfiguration": {
                                "contentTransfer": {
                                    "transferMode": "Chunked"
                                },
                                "paginationPolicy": {
                                    "minimumItemCount": 50000
                                }
                            }
                        },
                        "Parse_JSON_Devices_AdminUnit_MemberOf": {
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@body('HTTP_Check_Devices_Admin_Unit_MemberOf')",
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@@odata.context": {
                                            "type": "string"
                                        },
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "string"
                                                    },
                                                    "displayName": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "HTTP_Check_Devices_Admin_Unit_MemberOf": [
                                    "Succeeded"
                                ]
                            }
                        },
                        "Condition_Devices": {
                            "type": "If",
                            "expression": {
                                "and": [
                                    {
                                        "equals": [
                                            "@length(body('Parse_JSON_Devices')?['value'])",
                                            0
                                        ]
                                    }
                                ]
                            },
                            "actions": {
                                "Condition_Devices_2": {
                                    "type": "If",
                                    "expression": {
                                        "and": [
                                            {
                                                "startsWith": [
                                                    "@item()?['displayName']",
                                                    "@variables('PrefixRule')[0]['Prefix']"
                                                ]
                                            }
                                        ]
                                    },
                                    "actions": {
                                        "HTTP_Post_Device_to_AdminUnit": {
                                            "type": "Http",
                                            "inputs": {
                                                "uri": "https://graph.microsoft.com/beta/administrativeUnits/@{variables('PrefixRule')[0]['adminUnitId']}/members/$ref",
                                                "method": "POST",
                                                "body": {
                                                    "@@odata.id": "https://graph.microsoft.com/v1.0/devices/@{item()?['id']}"
                                                },
                                                "authentication": {
                                                  "type": "ActiveDirectoryOAuth",
                                                  "tenant": "[parameters('authTenant')]",
                                                  "audience": "https://graph.microsoft.com",
                                                  "clientId": "[parameters('authClientId')]",
                                                  "secret": "[parameters('authClientSecret')]"
                                                }
                                            },
                                            "runtimeConfiguration": {
                                                "contentTransfer": {
                                                    "transferMode": "Chunked"
                                                }
                                            }
                                        }
                                    },
                                    "else": {
                                        "actions": {}
                                    }
                                }
                            },
                            "else": {
                                "actions": {}
                            },
                            "runAfter": {
                                "Parse_JSON_Devices_AdminUnit_MemberOf": [
                                    "Succeeded"
                                ]
                            }
                        }
                    },
                    "runAfter": {
                        "Parse_JSON_Devices": [
                            "Succeeded"
                        ]
                    }
                },
                "Create_job_Get_Filtered_Users": {
                    "type": "ApiConnection",
                    "inputs": {
                        "host": {
                            "connection": {
                                "name": "@parameters('$connections')['azureautomation']['connectionId']"
                            }
                        },
                        "method": "put",
                        "path": "/subscriptions/@{encodeURIComponent('0d105690-967a-4b09-83bc-718220be00e0')}/resourceGroups/@{encodeURIComponent('rg-hesso-dev-chn')}/providers/Microsoft.Automation/automationAccounts/@{encodeURIComponent('aa-hesso-chn')}/jobs",
                        "queries": {
                            "x-ms-api-version": "2015-10-31",
                            "runbookName": "[parameters('runbookName')]",
                            "wait": true
                        }
                    },
                    "runAfter": {
                        "Initialize_UsersRulesMapping": [
                            "Succeeded"
                        ]
                    }
                },
                "Get_job_output": {
                    "type": "ApiConnection",
                    "inputs": {
                        "host": {
                            "connection": {
                                "name": "@parameters('$connections')['azureautomation']['connectionId']"
                            }
                        },
                        "method": "get",
                        "path": "/subscriptions/@{encodeURIComponent('0d105690-967a-4b09-83bc-718220be00e0')}/resourceGroups/@{encodeURIComponent('rg-hesso-dev-chn')}/providers/Microsoft.Automation/automationAccounts/@{encodeURIComponent('aa-hesso-chn')}/jobs/@{encodeURIComponent(body('Create_job_Get_Filtered_Users')?['properties']?['jobId'])}/output",
                        "queries": {
                            "x-ms-api-version": "2015-10-31"
                        }
                    },
                    "runAfter": {
                        "Create_job_Get_Filtered_Users": [
                            "Succeeded"
                        ]
                    }
                },
                "Compose_Runbook_Output": {
                    "type": "Compose",
                    "inputs": "@json(concat('[', string(body('Get_job_output')), ']'))",
                    "runAfter": {
                        "Get_job_output": [
                            "Succeeded"
                        ]
                    }
                }
            },
            "outputs": {},
            "parameters": {
                "$connections": {
                    "type": "Object",
                    "defaultValue": {}
                }
            }
        },
        "parameters": {
            "$connections": {
                "type": "Object",
                "value": {}
            }
        }
      }
    }
  ]
}
